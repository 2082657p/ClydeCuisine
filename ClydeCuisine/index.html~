<!DOCTYPE html>
<html>
	<head>
		<meta charset="UTF-8">
		<title>Clyde Cuisine</title>
    	<link rel="stylesheet" href="css/bootstrap.css" type="text/css">
    	<link rel="stylesheet" href="css/index.css" type="text/css">
		<script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
		<script src="http://www.d3plus.org/js/d3.js"></script>
		<script src="http://www.d3plus.org/js/d3plus.js"></script>
		<script src="https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.6.0/underscore.js" type="text/javascript"></script>
    	<script src="http://maps.googleapis.com/maps/api/js"></script>
		
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
    <script src="js/map.js"></script>	

<script type="text/javascript">
function togglemap(){
	document.getElementById("btn").click();
	
	}
	window.onload = togglemap;
	
	 function set_cookie ( cookie_name, cookie_value, lifespan_in_days)
			{
  			document.cookie = cookie_name + "=" + encodeURIComponent(cookie_value)+
      			"; max-age=" + 60 * 60 * 24 * lifespan_in_days +
      			"; path=/";
			} 
		function get_cookie ( cookie_name ){
  			cookie_string = document.cookie;
  			if (cookie_string.length != 0) {
    			var cookie_value = cookie_string.match(cookie_name + '=([^;]*)' );
    			return decodeURIComponent(cookie_value[1]);
  		}
  		return "couldn't find it" ;
		} 
			
		function delete_cookie(cookie_name){
  			document.cookie = cookie_name + "=; max-age=0; path=/";
		}
</script>

        <style>
            .stop-top {
                stop-color: #3f51b5;  /* Indigo */
            }

            .stop-bottom {
                stop-color: #009688;  /* Teal */
            }

            .filled {
                fill: url(#mainGradient);
            }
            .circle{
            	opacity: 0;
            }
            .circle-under{
            	fill: #99ccff;
            }
            .svg-container {
    			display: inline-block;
    			position: relative;
    			width: 100%;
    			padding-bottom: 100%; /* aspect ratio */
   			 	vertical-align: bottom;
    			overflow: hidden;
			}
			.svg-content-responsive {
			    display: inline-block;
    			position: absolute;
    			top: 100px;
    			left: 0;
			}
			.restaurant-name {
			    text-align: center;
			    font-size: 20px;
			    font-family: "Arial";
			}
			.text-small{
				text-align: center;
			    font-size: 12px;
			    color: white;
			    font-family: "Arial";
			}
        </style>
        
        
	</head>
<body>
  	<nav class="navbar navbar-default">
  <div class="container-fluid">
    <!-- Brand and toggle get grouped for better mobile display -->
    <div class="navbar-header">
      <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false">
        <span class="sr-only">Toggle navigation</span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </button>
      <a class="navbar-brand" href="#">Clyde Cuisine</a>
    </div>
 <!-- Collect the nav links, forms, and other content for toggling -->
    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
      <ul class="nav navbar-nav">
        
         <span ></span>
      </ul>
      
      <ul class="nav navbar-nav navbar-right">
       <form class="navbar-form navbar-left" role="search">
        <div class="form-group">
          <input type="text" class="form-control" placeholder="Dive right in!">
        </div>
        <button type="submit" class="btn btn-default">Submit</button>
      </form>
      <li data-toggle="modal" data-target="#registration"><a href="#">Register</a></li>
      <li data-toggle="modal" data-target="#Login"><a href="#">Login</a></li>
      </ul>
    </div><!-- /.navbar-collapse -->
  </div><!-- /.container-fluid -->
</nav>



<!-- Register -->
<div class="modal fade" id="registration" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title" id="myModalLabel">Register</h4>
      </div>
      <div class="modal-body">
        Registration info here
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary">Save changes</button>
      </div>
    </div>
  </div>
</div>


<!-- login -->
<div class="modal fade" id="Login" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title" id="myModalLabel">Login</h4>
      </div>
      <div class="modal-body">
        Login info here
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary">Save changes</button>
      </div>
    </div>
  </div>
</div>



<div style="text-align:center; margin-top:-21px;">
<button class="btn btn-default" id="btn">
  View Map
</button>
  <div class="well" id="map_canvas" style="width:100%;height:380px;">
  </div>
</div>

<button type="button" class="btn btn-default fixedbutton"> <span class="glyphicon glyphicon-refresh" aria-hidden="true"></span>  Refresh </button>

<script src="http://code.jquery.com/jquery-latest.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js"></script>



</body>






<script javascript>
var csvData;
var csvDataMain;
var qualityStart = 3;
var costStart = 3;

d3.csv("csv/data_final.csv", function(data) {
	csvData = data;
	csvDataMain = data;	
});

function printAll(csvData){
	for(i = 0; i < csvData.length; i++){
		console.log(csvData[i]);
	}
}

function getRandom(csvData, num){
	var outArray = [];
	while (outArray.length < num){
		var rand = Math.floor(Math.random() * csvData.length);
		if(_.indexOf(outArray, csvData[rand]) == -1){
			outArray[outArray.length] = csvData[rand];
		}
	}
	return outArray;
}

function getRandomWithCuisine(csvData, num, cuisine){
	var outArray = [];
	while (outArray.length < num){
		var rand = Math.floor(Math.random() * csvData.length);
		if(_.indexOf(outArray, csvData[rand]) == -1 &&( csvData[rand].Food_Type_1 == cuisine
													 || csvData[rand].Food_Type_2 == cuisine
													 || csvData[rand].Food_Type_3 == cuisine)){
			outArray[outArray.length] = csvData[rand];
		}
	}
	return outArray;
}

function getRandomCuisine(csvData, num){
	var outArray = [];
	while (outArray.length < num){
		var rand = Math.floor(Math.random() * csvData.length);
		if(_.indexOf(outArray, csvData[rand].Food_Type_1) == -1){
			outArray[outArray.length] = csvData[rand].Food_Type_1;
		}
	}
	return outArray;	
}

function refineCuisine(cuisine){
	var out = [];
	for(i = 0; i < csvDataMain.length; i++){
		if(csvDataMain[i].Food_Type_1 == cuisine || csvDataMain[i].Food_Type_2 == cuisine || csvDataMain[i].Food_Type_3 == cuisine){
			out[out.length] = csvDataMain[i];
		}
	}
	csvData = out;
	refresh();
}

function refineQualityUp(){
	var numRange = _.range(qualityStart, 5);
	var out = [];
	for(i = 0; i<csvData.length; i++){
		if(numRange.indexOf(csvData[i].Quality) > -1){
			out[out.length] = csvData[i];
		}
	}
	if(costStart < 5){
		qualityStart++;
	}
	csvData = out;
	refresh();
}

function refineQualityDown(){
	var numRange = _.range(1, qualityStart);
	var out = [];
	for(i = 0; i<csvData.length; i++){
		if(numRange.indexOf(csvData[i].Quality) > -1){
			out[out.length] = csvData[i];
		}
	}
	if(costStart > 1){
		qualityStart--;
	}
	csvData = out;
	refresh();
}

function refineCostUp(){
	var numRange = _.range(costStart, 5);
	var out = [];
	for(i = 0; i<csvData.length; i++){
		if(numRange.indexOf(csvData[i].Cost) > -1){
			out[out.length] = csvData[i];
		}
	}
	if(costStart < 5){
		costStart++;
	}
	csvData = out;
	refresh();
}

function refineCostDown(){
	var numRange = _.range(1, costStart);
	var out = [];
	for(i = 0; i<csvData.length; i++){
		if(numRange.indexOf(csvData[i].Cost) > -1){
			out[out.length] = csvData[i];
		}
	}
	if(costStart > 1){
		costStart--;
	}
	csvData = out;
}

function flushRefinements(){
	csvData = csvDataMain;
}

function refresh(){
	d3.selectAll(".circle-under").transition().duration(900).style("opacity", 0).remove();
	d3.selectAll(".circle").transition().duration(900).style("opacity", 0).remove();
	d3.selectAll(".restaurant-name").transition().duration(900).style("opacity", 0).remove();
	var results = getRandom(csvData, 4);
	var cuisines = getRandomCuisine(csvDataMain, 2);
	addBubble(results[0], 15, 29);
	addBubble(results[1], 50, 29);
	addBubble(results[2], 85, 29);
	addBubble(results[3], 15, 71);
	addCuisineBubble(cuisines[0], 50, 71);
	addCuisineBubble(cuisines[1], 85, 71);
}

function itemPos(item){
	var out = item+(Math.floor(Math.random() * 10));
	return out;
}


var svgContainer = d3.select("body").append("svg")
                                    .attr("width", "100%")
                                    .attr("height", "100%")
                                    .attr("fill", "#6699ff")
                                    .classed("svg-content-responsive", true); 
var bg = svgContainer.append("rect")
                         .attr("x", 0)
                         .attr("y", 0)
                         .attr("width", "100%")
                         .attr("height", "100%")
                         .on('mouseover', function(d){
                         	d3.selectAll(".circle-small").transition().duration(900).style("opacity", 0).remove();
                         	d3.selectAll(".text-small").transition().duration(900).style("opacity", 0).remove();
                         	d3.selectAll(".circle-small-cover").transition().duration(900).style("opacity", 0).remove();
                         })
                         .classed("filled", true);

                               
function addBubble(textAdd, centreX, centreY){
svgContainer.append("circle")
			.style("opacity", 0)
			.transition().duration(900).style("opacity", 1)
            .attr("cx", centreX+"%")
            .attr("cy", centreY+"%")
            .attr("r", "12%")
            .attr("class", "circle-under")
            .attr("stroke", "#6699ff")
            .attr("stroke-width", 3);
svgContainer.append("foreignObject")
			.style("opacity", 0)
			.transition().duration(900).style("opacity", 1)
			.attr("x", (centreX-9)+"%")
			.attr("y", (centreY-6)+"%")
			.attr("width", "18%")
			.attr("height", 100)
			.attr("class", "restaurant-name")
            .text(textAdd.BusinessName);
svgContainer.append("circle")
            .attr("cx", centreX+"%")
            .attr("cy", centreY+"%")
            .attr("r", "12%")
            .attr("class", "circle")
            .attr("stroke", "#6699ff")
            .on('mouseover', function(d){
				var resultsSmall = getRandom(csvData, 3);
                addSmallCircle(centreX-11.5, centreY-18.5, resultsSmall[0]);
    			addSmallCircle(centreX-14.5, centreY, resultsSmall[1]);
                addSmallCircle(centreX-11.5, centreY+18.5, resultsSmall[2]);
                addSmallCircleFunction(centreX+11.5, centreY-18.5, "Too Steep");
             	addSmallCircleFunction(centreX+14.5, centreY, "More Upmarket");
             	addSmallCircleFunction(centreX+11.5, centreY+18.5, "Change Cuisine");
                })
			 .on('click', function(d){
			 	delete_cookie("this_restaurant");
			 	set_cookie("this_restaurant", textAdd.Bus_ID, 7);
			 	window.location.href = "info.html";
			 })
             .attr("stroke-width", 3);                      
}

function addCuisineBubble(textAdd, centreX, centreY){
svgContainer.append("circle")
			.style("opacity", 0)
			.transition().duration(900).style("opacity", 1)
            .attr("cx", centreX+"%")
            .attr("cy", centreY+"%")
            .attr("r", "12%")
            .attr("class", "circle-under")
            .attr("stroke", "#6699ff")
            .attr("stroke-width", 3);
svgContainer.append("foreignObject")
			.style("opacity", 0)
			.transition().duration(900).style("opacity", 1)
			.attr("x", (centreX-9)+"%")
			.attr("y", (centreY-6)+"%")
			.attr("width", "18%")
			.attr("height", 100)
			.attr("class", "restaurant-name")
            .text(textAdd);
svgContainer.append("circle")
            .attr("cx", centreX+"%")
            .attr("cy", centreY+"%")
            .attr("r", "12%")
            .attr("class", "circle")
            .attr("stroke", "#6699ff")
            .on('mouseover', function(d){
				var resultsSmall = getRandomWithCuisine(csvData, 3, textAdd);
                addSmallCircle(centreX-11.5, centreY-18.5, resultsSmall[0]);
    			addSmallCircle(centreX-14.5, centreY, resultsSmall[1]);
                addSmallCircle(centreX-11.5, centreY+18.5, resultsSmall[2]);
                addSmallCircleFunction(centreX+11.5, centreY-18.5, "Too Steep");
             	addSmallCircleFunction(centreX+14.5, centreY, "More Upmarket");
             	addSmallCircleFunction(centreX+11.5, centreY+18.5, "Change Cuisine");
                })
			 .on('click', function(d){
			 	refineCuisine(textAdd);
			 })
             .attr("stroke-width", 3);                      
}

function addSmallCircle(x, y, textBit){
	svgContainer.append("circle")
	.style("opacity", 0)
			.transition().duration(900).style("opacity", 1)
    			.attr("cx", (x)+"%")
                .attr("cy", (y)+"%")
                .attr("r", "6%")
                .attr("class", "circle-small");
   svgContainer.append("foreignObject")
   .style("opacity", 0)
			.transition().duration(900).style("opacity", 1)
			   .attr("x", (x-3)+"%")
			   .attr("y", (y-3)+"%")
			   .attr("width", "6%")
			   .attr("height", 100)
			   .attr("class", "text-small")
               .text(textBit.BusinessName);
   svgContainer.append("circle")
				.style("opacity", 0)
    			.attr("cx", (x)+"%")
                .attr("cy", (y)+"%")
                .attr("r", "6%")
                .attr("class", "circle-small-cover");
}

function addSmallCircleFunction(x, y, textBit){
	svgContainer.append("circle")
	.style("opacity", 0)
			.transition().duration(900).style("opacity", 1)
    			.attr("cx", (x)+"%")
                .attr("cy", (y)+"%")
                .attr("r", "6%")
                .attr("class", "circle-small");
   svgContainer.append("foreignObject")
   .style("opacity", 0)
			.transition().duration(900).style("opacity", 1)
			   .attr("x", (x-3)+"%")
			   .attr("y", (y-3)+"%")
			   .attr("width", "6%")
			   .attr("height", 100)
			   .attr("class", "text-small")
               .text(textBit);
   svgContainer.append("circle")
				.style("opacity", 0)
    			.attr("cx", (x)+"%")
                .attr("cy", (y)+"%")
                .attr("r", "6%")
                .on('click', function(d){
			 		switch(textBit){
			 			case "Too Steep":
			 				refineCostDown();
			 				break;
			 			case "More Upmarket":
			 				refineCostDown();
			 				break;
			 			case "Change Cuisine":
			 				refineCuisine(getRandomCuisine(csvDataMain, 1));
			 				break;
			 		}
			 	})
                .attr("class", "circle-small-cover");
}

var svgDefs = svgContainer.append('defs');

var mainGradient = svgDefs.append('linearGradient')
						  .attr('id', 'mainGradient');

mainGradient.append('stop')
			.attr('class', 'stop-top')
			.attr('offset', '0');

mainGradient.append('stop')
			.attr('class', 'stop-bottom')
			.attr('offset', '1');
			


// perform function on load
document.addEventListener("DOMContentLoaded", function() {
	refresh();
});

</script>

</html>
